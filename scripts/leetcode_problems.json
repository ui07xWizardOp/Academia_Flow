[
  {
    "id": 1,
    "title": "Two Sum",
    "description": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.",
    "difficulty": "easy",
    "topics": [
      "Array",
      "Hash Table"
    ],
    "companies": [
      "Facebook",
      "Apple",
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "examples": [
      {
        "input": "nums = [2,7,11,15], target = 9",
        "output": "[0,1]",
        "explanation": "Because nums[0] + nums[1] == 9, we return [0, 1]."
      }
    ],
    "constraints": [
      "2 <= nums.length <= 10^4",
      "-10^9 <= nums[i] <= 10^9",
      "-10^9 <= target <= 10^9"
    ],
    "leetcode_id": 1,
    "premium": false,
    "acceptance_rate": 0.0
  },
  {
    "id": 3,
    "title": "Longest Substring Without Repeating Characters",
    "description": "Given a string s, find the length of the longest substring without repeating characters.",
    "difficulty": "medium",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "companies": [
      "Facebook",
      "Apple",
      "Amazon",
      "Adobe",
      "Microsoft"
    ],
    "examples": [
      {
        "input": "s = \"abcabcbb\"",
        "output": "3",
        "explanation": "The answer is \"abc\", with the length of 3."
      }
    ],
    "constraints": [
      "0 <= s.length <= 5 * 10^4",
      "s consists of English letters, digits, symbols and spaces."
    ],
    "leetcode_id": 3,
    "premium": false,
    "acceptance_rate": 0.0
  },
  {
    "id": 5,
    "title": "Longest Palindromic Substring",
    "description": "Given a string s, return the longest palindromic substring in s.",
    "difficulty": "medium",
    "topics": [
      "String",
      "Dynamic Programming"
    ],
    "companies": [
      "Amazon",
      "Adobe",
      "Microsoft",
      "Apple"
    ],
    "examples": [
      {
        "input": "s = \"babad\"",
        "output": "\"bab\"",
        "explanation": "Note: \"aba\" is also a valid answer."
      }
    ],
    "constraints": [
      "1 <= s.length <= 1000",
      "s consist of only digits and English letters."
    ],
    "leetcode_id": 5,
    "premium": false,
    "acceptance_rate": 0.0
  },
  {
    "id": 15,
    "title": "3Sum",
    "description": "Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.",
    "difficulty": "medium",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "companies": [
      "Facebook",
      "Apple",
      "Amazon",
      "Adobe",
      "Microsoft"
    ],
    "examples": [
      {
        "input": "nums = [-1,0,1,2,-1,-4]",
        "output": "[[-1,-1,2],[-1,0,1]]",
        "explanation": "The distinct triplets are [-1,-1,2] and [-1,0,1]."
      }
    ],
    "constraints": [
      "3 <= nums.length <= 3000",
      "-10^5 <= nums[i] <= 10^5"
    ],
    "leetcode_id": 15,
    "premium": false,
    "acceptance_rate": 0.0
  },
  {
    "id": 20,
    "title": "Valid Parentheses",
    "description": "Given a string s containing just the characters \"(\", \")\", \"{\", \"}\", \"[\" and \"]\", determine if the input string is valid.",
    "difficulty": "easy",
    "topics": [
      "String",
      "Stack"
    ],
    "companies": [
      "Facebook",
      "Apple",
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "examples": [
      {
        "input": "s = \"()\"",
        "output": "true"
      },
      {
        "input": "s = \"()[]{}\"",
        "output": "true"
      },
      {
        "input": "s = \"(]\"",
        "output": "false"
      }
    ],
    "constraints": [
      "1 <= s.length <= 10^4",
      "s consists of parentheses only \"()[]{}\""
    ],
    "leetcode_id": 20,
    "premium": false,
    "acceptance_rate": 0.0
  },
  {
    "id": 21,
    "title": "Merge Two Sorted Lists",
    "description": "You are given the heads of two sorted linked lists list1 and list2. Merge the two lists in a sorted list.",
    "difficulty": "easy",
    "topics": [
      "Linked List",
      "Recursion"
    ],
    "companies": [
      "Amazon",
      "Adobe",
      "Microsoft",
      "Apple"
    ],
    "examples": [
      {
        "input": "list1 = [1,2,4], list2 = [1,3,4]",
        "output": "[1,1,2,3,4,4]"
      }
    ],
    "constraints": [
      "The number of nodes in both lists is in the range [0, 50]",
      "-100 <= Node.val <= 100"
    ],
    "leetcode_id": 21,
    "premium": false,
    "acceptance_rate": 0.0
  },
  {
    "id": 53,
    "title": "Maximum Subarray",
    "description": "Given an integer array nums, find the contiguous subarray which has the largest sum and return its sum.",
    "difficulty": "medium",
    "topics": [
      "Array",
      "Divide and Conquer",
      "Dynamic Programming"
    ],
    "companies": [
      "Facebook",
      "Apple",
      "LinkedIn",
      "Amazon",
      "Microsoft"
    ],
    "examples": [
      {
        "input": "nums = [-2,1,-3,4,-1,2,1,-5,4]",
        "output": "6",
        "explanation": "[4,-1,2,1] has the largest sum = 6."
      }
    ],
    "constraints": [
      "1 <= nums.length <= 10^5",
      "-10^4 <= nums[i] <= 10^4"
    ],
    "leetcode_id": 53,
    "premium": false,
    "acceptance_rate": 0.0
  },
  {
    "id": 70,
    "title": "Climbing Stairs",
    "description": "You are climbing a staircase. It takes n steps to reach the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?",
    "difficulty": "easy",
    "topics": [
      "Math",
      "Dynamic Programming",
      "Memoization"
    ],
    "companies": [
      "Amazon",
      "Adobe",
      "Uber",
      "Apple"
    ],
    "examples": [
      {
        "input": "n = 2",
        "output": "2",
        "explanation": "There are two ways to climb to the top: 1. 1 step + 1 step, 2. 2 steps"
      }
    ],
    "constraints": [
      "1 <= n <= 45"
    ],
    "leetcode_id": 70,
    "premium": false,
    "acceptance_rate": 0.0
  },
  {
    "id": 121,
    "title": "Best Time to Buy and Sell Stock",
    "description": "You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.",
    "difficulty": "easy",
    "topics": [
      "Array",
      "Dynamic Programming"
    ],
    "companies": [
      "Facebook",
      "Apple",
      "Amazon",
      "Bloomberg",
      "Microsoft"
    ],
    "examples": [
      {
        "input": "prices = [7,1,5,3,6,4]",
        "output": "5",
        "explanation": "Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5."
      }
    ],
    "constraints": [
      "1 <= prices.length <= 10^5",
      "0 <= prices[i] <= 10^4"
    ],
    "leetcode_id": 121,
    "premium": false,
    "acceptance_rate": 0.0
  },
  {
    "id": 125,
    "title": "Valid Palindrome",
    "description": "A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward.",
    "difficulty": "easy",
    "topics": [
      "Two Pointers",
      "String"
    ],
    "companies": [
      "Facebook",
      "Microsoft",
      "Amazon",
      "Apple"
    ],
    "examples": [
      {
        "input": "s = \"A man, a plan, a canal: Panama\"",
        "output": "true",
        "explanation": "\"amanaplanacanalpanama\" is a palindrome."
      }
    ],
    "constraints": [
      "1 <= s.length <= 2 * 10^5",
      "s consists only of printable ASCII characters."
    ],
    "leetcode_id": 125,
    "premium": false,
    "acceptance_rate": 0.0
  },
  {
    "id": 200,
    "title": "Number of Islands",
    "description": "Given an m x n 2D binary grid grid which represents a map of \"1\"s (land) and \"0\"s (water), return the number of islands.",
    "difficulty": "medium",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "companies": [
      "Facebook",
      "Apple",
      "Google",
      "Amazon",
      "Microsoft"
    ],
    "examples": [
      {
        "input": "grid = [[\"1\",\"1\",\"1\",\"1\",\"0\"],[\"1\",\"1\",\"0\",\"1\",\"0\"],[\"1\",\"1\",\"0\",\"0\",\"0\"],[\"0\",\"0\",\"0\",\"0\",\"0\"]]",
        "output": "1"
      }
    ],
    "constraints": [
      "m == grid.length",
      "n == grid[i].length",
      "1 <= m, n <= 300"
    ],
    "leetcode_id": 200,
    "premium": false,
    "acceptance_rate": 0.0
  },
  {
    "id": 206,
    "title": "Reverse Linked List",
    "description": "Given the head of a singly linked list, reverse the list and return the reversed list.",
    "difficulty": "easy",
    "topics": [
      "Linked List",
      "Recursion"
    ],
    "companies": [
      "Facebook",
      "Apple",
      "Amazon",
      "Adobe",
      "Microsoft"
    ],
    "examples": [
      {
        "input": "head = [1,2,3,4,5]",
        "output": "[5,4,3,2,1]"
      }
    ],
    "constraints": [
      "The number of nodes in the list is the range [0, 5000]",
      "-5000 <= Node.val <= 5000"
    ],
    "leetcode_id": 206,
    "premium": false,
    "acceptance_rate": 0.0
  },
  {
    "id": 238,
    "title": "Product of Array Except Self",
    "description": "Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].",
    "difficulty": "medium",
    "topics": [
      "Array",
      "Prefix Sum"
    ],
    "companies": [
      "Facebook",
      "Apple",
      "Amazon",
      "Lyft",
      "Microsoft"
    ],
    "examples": [
      {
        "input": "nums = [1,2,3,4]",
        "output": "[24,12,8,6]"
      }
    ],
    "constraints": [
      "2 <= nums.length <= 10^5",
      "-30 <= nums[i] <= 30"
    ],
    "leetcode_id": 238,
    "premium": false,
    "acceptance_rate": 0.0
  },
  {
    "id": 242,
    "title": "Valid Anagram",
    "description": "Given two strings s and t, return true if t is an anagram of s, and false otherwise.",
    "difficulty": "easy",
    "topics": [
      "Hash Table",
      "String",
      "Sorting"
    ],
    "companies": [
      "Amazon",
      "Facebook",
      "Apple",
      "Bloomberg"
    ],
    "examples": [
      {
        "input": "s = \"anagram\", t = \"nagaram\"",
        "output": "true"
      },
      {
        "input": "s = \"rat\", t = \"car\"",
        "output": "false"
      }
    ],
    "constraints": [
      "1 <= s.length, t.length <= 5 * 10^4",
      "s and t consist of lowercase English letters."
    ],
    "leetcode_id": 242,
    "premium": false,
    "acceptance_rate": 0.0
  },
  {
    "id": 347,
    "title": "Top K Frequent Elements",
    "description": "Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order.",
    "difficulty": "medium",
    "topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Bucket Sort",
      "Counting",
      "Quickselect"
    ],
    "companies": [
      "Facebook",
      "Pocket Gems",
      "Apple",
      "Amazon",
      "Yelp"
    ],
    "examples": [
      {
        "input": "nums = [1,1,1,2,2,3], k = 2",
        "output": "[1,2]"
      }
    ],
    "constraints": [
      "1 <= nums.length <= 10^5",
      "k is in the range [1, the number of unique elements in the array]"
    ],
    "leetcode_id": 347,
    "premium": false,
    "acceptance_rate": 0.0
  }
]